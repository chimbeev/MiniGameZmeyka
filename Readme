ЭТАПЫ ВЫПОЛНЕНИЯ ПРОЕКТА
Первый этап

Спроектировать структуру классов, которые вы будете использовать в реализации игры. Ответить на вопросы:
Какие сущности присутствуют в игре?
Какие свойства и методы должны быть у этих сущностей для реализации нужного функционала?
Второй этап

Создать разметку игрового поля, прописать классы и CSS-код для клеток поля, змейки и яблока.
Добавить в интерфейс и стилизовать поле для вывода текущего и лучшего результатов, а также кнопку для рестарта игры.
Третий этап

Создать классы с логикой поведения игрового поля, змейки и яблока.
Используя эти классы, реализовать основную логику игры: начало игры, управление змейкой и конец игры.
Четвёртый этап

Добавить «запоминание» лучшего результата игрока с использованием localStorage.
Как следует протестировать игру и убедиться, что всё работает в соответствии с ТЗ и без ошибок.
Вы великолепны! :)

Первый этап

Спроектировать структуру классов, которые вы будете использовать в реализации игры. Ответить на вопросы:
Какие сущности присутствуют в игре?
Какие свойства и методы должны быть у этих сущностей для реализации нужного функционала?

Самый первый базовый класс - это клетка cell
class Cell - должен быть квадратным и менять свою окраску в зависимости от того , чем он занят.
Если змея, то зеленая. Если клетка , то серая. Если яблоко, то красное. то есть св-во color:Red, green, grey;
У клетки должны быть координаты x y . св-во X и cв-во Y

class Field - класс поле 10 на 10. Каждая клетка обведена белой границей. Если голова змеи выдвинулась за границы поля
, то змея должна переместиться на противоположную сторону.

class Snake - класс змея. Св-во длина змеи, Как двигать змею ?
Движение змейки осуществляется за счёт удаления/добавления соответствующих классов определённым клеткам.
направление движения задает голова змеи. Клетка розового цвета которая реагирует на клавиши управления.
Следующая клетка после изменения координат головы змеи, меняет свои координаты на координаты предудущей клетки
Возможно это реализовать через какой-то тип даных который позволяет передвигать ячейки по конвейеру.
То есть в первой ячейке хранится координаты головы, голова сдвинулась, и теперь передвинем ячейку на один вправо и оттуда возьмем
координаты второй клетки
метод Snake.move. Массив обьектов cell